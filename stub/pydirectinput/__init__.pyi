import ctypes
from typing import Iterable

FAILSAFE: bool
FAILSAFE_POINTS: list[tuple[int, int]]
PAUSE: float
LEFT: str
MIDDLE: str
RIGHT: str
PRIMARY: str
SECONDARY: str
MOUSEEVENTF_MOVE: int
MOUSEEVENTF_ABSOLUTE: int
MOUSEEVENTF_LEFTDOWN: int
MOUSEEVENTF_LEFTUP: int
MOUSEEVENTF_LEFTCLICK: int
MOUSEEVENTF_RIGHTDOWN: int
MOUSEEVENTF_RIGHTUP: int
MOUSEEVENTF_RIGHTCLICK: int
MOUSEEVENTF_MIDDLEDOWN: int
MOUSEEVENTF_MIDDLEUP: int
MOUSEEVENTF_MIDDLECLICK: int
KEYEVENTF_EXTENDEDKEY: int
KEYEVENTF_KEYUP: int
KEYEVENTF_SCANCODE: int
KEYEVENTF_UNICODE: int
MAPVK_VK_TO_CHAR: int
MAPVK_VK_TO_VSC: int
MAPVK_VSC_TO_VK: int
MAPVK_VSC_TO_VK_EX: int
KEYBOARD_MAPPING: dict[str, int]

class KeyBdInput(ctypes.Structure): ...
class HardwareInput(ctypes.Structure): ...
class MouseInput(ctypes.Structure): ...
class POINT(ctypes.Structure): ...
class Input_I(ctypes.Union): ...
class Input(ctypes.Structure): ...
class FailSafeException(Exception): ...

def failSafeCheck() -> None: ...
def position(x: int | None = None, y: int | None = None) -> tuple[int, int]: ...
def size() -> tuple[int, int]: ...
def mouseDown(x: int | None = None, y: int | None = None, button: str = PRIMARY, duration: None = None, tween: None = None, logScreenshot: None = None, _pause: bool = True) -> None: ...
def mouseUp(x: int | None = None, y: int | None = None, button: str = PRIMARY, duration: None = None, tween: None = None, logScreenshot: None = None, _pause: bool = True) -> None: ...
def click(x: int | None = None, y: int | None = None, clicks: int = 1, interval: float = 0.0, button: str = PRIMARY, duration: float | None = None, tween: None = None, logScreenshot: None = None, _pause: bool = True) -> None: ...
def leftClick(x: int | None = None, y: int | None = None, interval: float = 0.0, duration: float = 0.0, tween: None = None, logScreenshot: None = None, _pause: bool = True) -> None: ...
def rightClick(x: int | None = None, y: int | None = None, interval: float = 0.0, duration: float = 0.0, tween: None = None, logScreenshot: None = None, _pause: bool = True) -> None: ...
def middleClick(x: int | None = None, y: int | None = None, interval: float = 0.0, duration: float = 0.0, tween: None = None, logScreenshot: None = None, _pause: bool = True) -> None: ...
def doubleClick(x: int | None = None, y: int | None = None, interval: float = 0.0, button: str = PRIMARY, duration: float = 0.0, tween: None = None, logScreenshot: None = None, _pause: bool = True) -> None: ...
def tripleClick(x: int | None = None, y: int | None = None, interval: float = 0.0, button: str = PRIMARY, duration: float = 0.0, tween: None = None, logScreenshot: None = None, _pause: bool = True) -> None: ...
def moveTo(x: int | None = None, y: int | None = None, duration: None = None, tween: None = None, logScreenshot: bool = False, _pause: bool = True, relative: bool = False) -> None: ...
def moveRel(xOffset: int | None = None, yOffset: int | None = None, duration: None = None, tween: None = None, logScreenshot: bool = False, _pause: bool = True, relative: bool = False) -> None: ...
move = moveRel

def keyDown(key: str | Iterable[str], logScreenshot: None = None, _pause: bool = True) -> bool: ...
def keyUp(key: str | Iterable[str], logScreenshot: None = None, _pause: bool = True) -> bool: ...
def press(keys: str | Iterable[str], presses: int = 1, interval: float = 0.0, logScreenshot: None = None, _pause: bool = True) -> bool: ...
def typewrite(message: str, interval: float = 0.0, logScreenshot: None = None, _pause: bool = True) -> None: ...
write = typewrite
